upstream client {
  server client:3000;
}

upstream api {
  server api:5000;
}

server {
  listen 80;

  location / {
    # url is referring to container called client, named in docker-compose
    proxy_pass http://client; 
  }

  # open websocket for reactjs development server (can be removed for prod env)
  location /sockjs-node {
    proxy_pass http://client;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location /api {
    # trim off /api/ part of url request
    rewrite /api/(.*) /$1 break; # regex rule searching for found string chops off /api/ and rewrites the URL
                                 # break directive prevent nginx from passing rewritten request to another location for processing
    
    # url is referring to container called api (server), named in docker-compose
    proxy_pass http://api;
  }
}